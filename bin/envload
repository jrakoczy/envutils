#!/usr/bin/env bash
# Run this script to load all environment configuration files from the
# Nix store to the user's home directory.

package_path() {
   printf "$(nix-env -f '<jrakoczy-pkgs>' -qa --no-name --out-path "$1")"
}

package_name="$1"
store_path="$(package_path "$package_name")"
destination_path="$HOME"
script_path="$(dirname "$(readlink -f "$0")")"

set -e
"$script_path"/confirmation-prompt "Are you sure you want to overwrite the current env?"

envdel

# We are sym-linking Nix store paths, so all config files will be
# non-modifiable. If you need to change a file in an imperative way
# (either to test it or for whatever other purpose you have), please use
#`envtest <filename>`.
#
# Note that, if a config file already exists in the user's home, it will
# be OVERWRITTEN.

find_opts=( -mindepth 1 -not -name '.git' -not -name 'bin' )

# Directories with correct access permissions.
find "$store_path" "${find_opts[@]}" -type d |\
    sed "s$^$store_path#$destination_path#" |\
    xargs mkdir -p

# Files as sym-links.
find "$store_path" -maxdepth 1 "${find_opts[@]}" -exec\
    cp -nsR '{}' "$destination_path" ';'

# All loaded file names are stored in an additional meta-file, so the
# whole environment may be removed conveniently with `envdel`.
config_meta="$destination_path/.env-meta"
find "$store_path" -type f -follow -not -path '*.git' -not -path '*bin*' |\
    sed "s#^$store_path#$destination_path#" > "$config_meta"

printf "%s" "$config_meta" >> "$config_meta"

# An evironment-specific hook. Runs everything you need to set up tools:
# sources shell file, exports variables, updates editor plugins, etc.
post-envload-hook
